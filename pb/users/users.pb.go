// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/users/users.proto

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	pb/users/users.proto

It has these top-level messages:
	User
	GetUserRequest
	ListUsersRequest
	ListUsersResponse
	CreateUserRequest
	UpdateUserRequest
	DeleteUserRequest
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "google.golang.org/genproto/protobuf/field_mask"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phone string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type GetUserRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ListUsersRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListUsersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListUsersResponse struct {
	Users         []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	NextPageToken string  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	User       *User                       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	UpdateMask *google_protobuf1.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUserRequest) GetUpdateMask() *google_protobuf1.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteUserRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "booking_calendar.users.User")
	proto.RegisterType((*GetUserRequest)(nil), "booking_calendar.users.GetUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "booking_calendar.users.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "booking_calendar.users.ListUsersResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "booking_calendar.users.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "booking_calendar.users.UpdateUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "booking_calendar.users.DeleteUserRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users service

type UsersClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/booking_calendar.users.Users/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/booking_calendar.users.Users/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/booking_calendar.users.Users/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/booking_calendar.users.Users/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/booking_calendar.users.Users/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersServer interface {
	GetUser(context.Context, *GetUserRequest) (*User, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*google_protobuf.Empty, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.users.Users/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.users.Users/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.users.Users/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.users.Users/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.users.Users/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "booking_calendar.users.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Users_GetUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _Users_ListUsers_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Users_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Users_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Users_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/users/users.proto",
}

func init() { proto.RegisterFile("pb/users/users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0x9b, 0x26, 0x69, 0x9b, 0x89, 0x28, 0xc4, 0xaa, 0xaa, 0x68, 0x5b, 0xa4, 0xc8, 0x87,
	0x28, 0xbd, 0x6c, 0x50, 0x38, 0x72, 0x03, 0x5a, 0x2e, 0x80, 0x68, 0xa0, 0xaa, 0xc4, 0x25, 0x72,
	0xc8, 0x34, 0x58, 0xd9, 0xb5, 0xcd, 0xda, 0x2b, 0x41, 0x8f, 0x7d, 0x05, 0x9e, 0x0c, 0xf1, 0x0a,
	0x3c, 0x08, 0xf2, 0x78, 0xdb, 0xb4, 0xdd, 0x2c, 0x41, 0xea, 0x65, 0x65, 0xcf, 0x7c, 0xfb, 0xcf,
	0xd8, 0xff, 0xec, 0xc2, 0x9e, 0x99, 0x0e, 0x73, 0x8b, 0x99, 0x0d, 0xcf, 0xd8, 0x64, 0xda, 0x69,
	0xb6, 0x3f, 0xd5, 0x7a, 0x21, 0xd5, 0x7c, 0xf2, 0x45, 0x24, 0xa8, 0x66, 0x22, 0x8b, 0x29, 0x1b,
	0x1d, 0xcc, 0xb5, 0x9e, 0x27, 0x38, 0x24, 0x6a, 0x9a, 0x5f, 0x0c, 0x31, 0x35, 0xee, 0x47, 0x78,
	0x29, 0xea, 0xdd, 0x4f, 0x5e, 0x48, 0x4c, 0x66, 0x93, 0x54, 0xd8, 0x45, 0x41, 0x1c, 0x16, 0x84,
	0x30, 0x72, 0x28, 0x94, 0xd2, 0x4e, 0x38, 0xa9, 0x55, 0x51, 0x94, 0x9f, 0x40, 0xe3, 0xcc, 0x62,
	0xc6, 0xf6, 0xa0, 0x89, 0xa9, 0x90, 0x49, 0xb7, 0xd6, 0xab, 0x0d, 0x5a, 0xe3, 0xb0, 0x61, 0x0c,
	0x1a, 0x4a, 0xa4, 0xd8, 0xdd, 0xa4, 0x20, 0xad, 0x3d, 0x69, 0xbe, 0x6a, 0x85, 0xdd, 0x7a, 0x20,
	0x69, 0xc3, 0xfb, 0xb0, 0xfb, 0x06, 0x9d, 0x97, 0x1a, 0xe3, 0xb7, 0x1c, 0xad, 0x5b, 0xad, 0xc8,
	0xdf, 0xc3, 0x93, 0xb7, 0xd2, 0x12, 0x68, 0xaf, 0xc9, 0x03, 0x68, 0x19, 0x31, 0xc7, 0x89, 0x95,
	0x97, 0x48, 0x74, 0x73, 0xbc, 0xe3, 0x03, 0x1f, 0xe5, 0x25, 0xb2, 0xa7, 0x00, 0x94, 0x74, 0x7a,
	0x81, 0xaa, 0x68, 0x84, 0xf0, 0x4f, 0x3e, 0xc0, 0x35, 0x74, 0x6e, 0xe9, 0x59, 0xa3, 0x95, 0x45,
	0x36, 0x82, 0x26, 0x5d, 0x5d, 0xb7, 0xd6, 0xab, 0x0f, 0xda, 0xa3, 0xc3, 0x78, 0xf5, 0xcd, 0xc6,
	0xd4, 0x6e, 0x40, 0x59, 0x1f, 0x1e, 0x2b, 0xfc, 0xee, 0x26, 0xa5, 0x62, 0x8f, 0x7c, 0xf8, 0xc3,
	0x4d, 0xc1, 0x63, 0xe8, 0xbc, 0xca, 0x50, 0x38, 0xbc, 0x7d, 0xd6, 0x67, 0xd0, 0xf0, 0x2a, 0xd4,
	0xfc, 0xba, 0x7a, 0x44, 0xf2, 0xab, 0x1a, 0x74, 0xce, 0xcc, 0xec, 0xa1, 0x3a, 0xec, 0x05, 0xb4,
	0x73, 0x92, 0x21, 0xcb, 0xa9, 0xe5, 0xf6, 0x28, 0x8a, 0x83, 0xe7, 0xf1, 0xf5, 0x54, 0xc4, 0x27,
	0x7e, 0x2a, 0xde, 0x09, 0xbb, 0x18, 0x43, 0xc0, 0xfd, 0x9a, 0x1f, 0x41, 0xe7, 0x35, 0x26, 0x78,
	0xb7, 0x87, 0x95, 0xbe, 0x8d, 0x7e, 0xd5, 0xa1, 0x49, 0x97, 0xcc, 0x4e, 0x61, 0xbb, 0x70, 0x9a,
	0xf5, 0xab, 0x1a, 0xbc, 0x3b, 0x0a, 0xd1, 0x3f, 0x0f, 0xc2, 0x37, 0x98, 0x81, 0xd6, 0x8d, 0x89,
	0x6c, 0x50, 0x05, 0xdf, 0x9f, 0x9b, 0xe8, 0xe8, 0x3f, 0xc8, 0x30, 0x11, 0x7c, 0xf7, 0xea, 0xf7,
	0x9f, 0x9f, 0x9b, 0x3b, 0x6c, 0x2b, 0x7c, 0x71, 0xec, 0x1c, 0x60, 0xe9, 0x22, 0xab, 0x14, 0x2a,
	0x39, 0xbd, 0xf6, 0x28, 0xe7, 0x00, 0x4b, 0x5b, 0xab, 0x85, 0x4b, 0xd6, 0xaf, 0x15, 0x3e, 0x05,
	0x58, 0x7a, 0x55, 0x2d, 0x5c, 0xf2, 0x33, 0xda, 0x2f, 0x0d, 0xc3, 0xb1, 0xff, 0x7f, 0xf0, 0x8d,
	0x97, 0xdb, 0x9f, 0xc3, 0xec, 0x4f, 0xb7, 0x28, 0xf5, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x16, 0x19, 0xa2, 0x1f, 0x98, 0x04, 0x00, 0x00,
}
