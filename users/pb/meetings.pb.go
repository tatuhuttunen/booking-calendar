// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meetings.proto

/*
Package booking_calendar is a generated protocol buffer package.

It is generated from these files:
	meetings.proto

It has these top-level messages:
	Time
	Meeting
	GetMeetingRequest
	ListMeetingsRequest
	ListMeetingsResponse
	CreateMeetingRequest
	UpdateMeetingRequest
	DeleteMeetingRequest
*/
package booking_calendar

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Time struct {
	DateTime string `protobuf:"bytes,1,opt,name=date_time,json=dateTime" json:"date_time,omitempty"`
	TimeZone string `protobuf:"bytes,2,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
}

func (m *Time) Reset()                    { *m = Time{} }
func (m *Time) String() string            { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()               {}
func (*Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Time) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *Time) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

type Meeting struct {
	Parent      string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Start       *Time  `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End         *Time  `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Location    string `protobuf:"bytes,7,opt,name=location" json:"location,omitempty"`
}

func (m *Meeting) Reset()                    { *m = Meeting{} }
func (m *Meeting) String() string            { return proto.CompactTextString(m) }
func (*Meeting) ProtoMessage()               {}
func (*Meeting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Meeting) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Meeting) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Meeting) GetStart() *Time {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Meeting) GetEnd() *Time {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Meeting) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Meeting) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Meeting) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type GetMeetingRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetMeetingRequest) Reset()                    { *m = GetMeetingRequest{} }
func (m *GetMeetingRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMeetingRequest) ProtoMessage()               {}
func (*GetMeetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetMeetingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListMeetingsRequest struct {
	Parent    string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListMeetingsRequest) Reset()                    { *m = ListMeetingsRequest{} }
func (m *ListMeetingsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListMeetingsRequest) ProtoMessage()               {}
func (*ListMeetingsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListMeetingsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListMeetingsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListMeetingsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListMeetingsResponse struct {
	Meetings      []*Meeting `protobuf:"bytes,1,rep,name=meetings" json:"meetings,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListMeetingsResponse) Reset()                    { *m = ListMeetingsResponse{} }
func (m *ListMeetingsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListMeetingsResponse) ProtoMessage()               {}
func (*ListMeetingsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListMeetingsResponse) GetMeetings() []*Meeting {
	if m != nil {
		return m.Meetings
	}
	return nil
}

func (m *ListMeetingsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateMeetingRequest struct {
	Parent  string   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Meeting *Meeting `protobuf:"bytes,2,opt,name=meeting" json:"meeting,omitempty"`
}

func (m *CreateMeetingRequest) Reset()                    { *m = CreateMeetingRequest{} }
func (m *CreateMeetingRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateMeetingRequest) ProtoMessage()               {}
func (*CreateMeetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateMeetingRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateMeetingRequest) GetMeeting() *Meeting {
	if m != nil {
		return m.Meeting
	}
	return nil
}

type UpdateMeetingRequest struct {
	Meeting    *Meeting                    `protobuf:"bytes,1,opt,name=meeting" json:"meeting,omitempty"`
	UpdateMask *google_protobuf1.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateMeetingRequest) Reset()                    { *m = UpdateMeetingRequest{} }
func (m *UpdateMeetingRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMeetingRequest) ProtoMessage()               {}
func (*UpdateMeetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateMeetingRequest) GetMeeting() *Meeting {
	if m != nil {
		return m.Meeting
	}
	return nil
}

func (m *UpdateMeetingRequest) GetUpdateMask() *google_protobuf1.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteMeetingRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteMeetingRequest) Reset()                    { *m = DeleteMeetingRequest{} }
func (m *DeleteMeetingRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteMeetingRequest) ProtoMessage()               {}
func (*DeleteMeetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteMeetingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Time)(nil), "booking_calendar.Time")
	proto.RegisterType((*Meeting)(nil), "booking_calendar.Meeting")
	proto.RegisterType((*GetMeetingRequest)(nil), "booking_calendar.GetMeetingRequest")
	proto.RegisterType((*ListMeetingsRequest)(nil), "booking_calendar.ListMeetingsRequest")
	proto.RegisterType((*ListMeetingsResponse)(nil), "booking_calendar.ListMeetingsResponse")
	proto.RegisterType((*CreateMeetingRequest)(nil), "booking_calendar.CreateMeetingRequest")
	proto.RegisterType((*UpdateMeetingRequest)(nil), "booking_calendar.UpdateMeetingRequest")
	proto.RegisterType((*DeleteMeetingRequest)(nil), "booking_calendar.DeleteMeetingRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MeetingsService service

type MeetingsServiceClient interface {
	GetMeeting(ctx context.Context, in *GetMeetingRequest, opts ...grpc.CallOption) (*Meeting, error)
	ListMeetings(ctx context.Context, in *ListMeetingsRequest, opts ...grpc.CallOption) (*ListMeetingsResponse, error)
	CreateMeeting(ctx context.Context, in *CreateMeetingRequest, opts ...grpc.CallOption) (*Meeting, error)
	UpdateMeeting(ctx context.Context, in *UpdateMeetingRequest, opts ...grpc.CallOption) (*Meeting, error)
	DeleteMeeting(ctx context.Context, in *DeleteMeetingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type meetingsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMeetingsServiceClient(cc *grpc.ClientConn) MeetingsServiceClient {
	return &meetingsServiceClient{cc}
}

func (c *meetingsServiceClient) GetMeeting(ctx context.Context, in *GetMeetingRequest, opts ...grpc.CallOption) (*Meeting, error) {
	out := new(Meeting)
	err := grpc.Invoke(ctx, "/booking_calendar.MeetingsService/GetMeeting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingsServiceClient) ListMeetings(ctx context.Context, in *ListMeetingsRequest, opts ...grpc.CallOption) (*ListMeetingsResponse, error) {
	out := new(ListMeetingsResponse)
	err := grpc.Invoke(ctx, "/booking_calendar.MeetingsService/ListMeetings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingsServiceClient) CreateMeeting(ctx context.Context, in *CreateMeetingRequest, opts ...grpc.CallOption) (*Meeting, error) {
	out := new(Meeting)
	err := grpc.Invoke(ctx, "/booking_calendar.MeetingsService/CreateMeeting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingsServiceClient) UpdateMeeting(ctx context.Context, in *UpdateMeetingRequest, opts ...grpc.CallOption) (*Meeting, error) {
	out := new(Meeting)
	err := grpc.Invoke(ctx, "/booking_calendar.MeetingsService/UpdateMeeting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingsServiceClient) DeleteMeeting(ctx context.Context, in *DeleteMeetingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/booking_calendar.MeetingsService/DeleteMeeting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MeetingsService service

type MeetingsServiceServer interface {
	GetMeeting(context.Context, *GetMeetingRequest) (*Meeting, error)
	ListMeetings(context.Context, *ListMeetingsRequest) (*ListMeetingsResponse, error)
	CreateMeeting(context.Context, *CreateMeetingRequest) (*Meeting, error)
	UpdateMeeting(context.Context, *UpdateMeetingRequest) (*Meeting, error)
	DeleteMeeting(context.Context, *DeleteMeetingRequest) (*google_protobuf.Empty, error)
}

func RegisterMeetingsServiceServer(s *grpc.Server, srv MeetingsServiceServer) {
	s.RegisterService(&_MeetingsService_serviceDesc, srv)
}

func _MeetingsService_GetMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingsServiceServer).GetMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.MeetingsService/GetMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingsServiceServer).GetMeeting(ctx, req.(*GetMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingsService_ListMeetings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMeetingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingsServiceServer).ListMeetings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.MeetingsService/ListMeetings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingsServiceServer).ListMeetings(ctx, req.(*ListMeetingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingsService_CreateMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingsServiceServer).CreateMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.MeetingsService/CreateMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingsServiceServer).CreateMeeting(ctx, req.(*CreateMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingsService_UpdateMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingsServiceServer).UpdateMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.MeetingsService/UpdateMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingsServiceServer).UpdateMeeting(ctx, req.(*UpdateMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingsService_DeleteMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingsServiceServer).DeleteMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking_calendar.MeetingsService/DeleteMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingsServiceServer).DeleteMeeting(ctx, req.(*DeleteMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeetingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "booking_calendar.MeetingsService",
	HandlerType: (*MeetingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMeeting",
			Handler:    _MeetingsService_GetMeeting_Handler,
		},
		{
			MethodName: "ListMeetings",
			Handler:    _MeetingsService_ListMeetings_Handler,
		},
		{
			MethodName: "CreateMeeting",
			Handler:    _MeetingsService_CreateMeeting_Handler,
		},
		{
			MethodName: "UpdateMeeting",
			Handler:    _MeetingsService_UpdateMeeting_Handler,
		},
		{
			MethodName: "DeleteMeeting",
			Handler:    _MeetingsService_DeleteMeeting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meetings.proto",
}

func init() { proto.RegisterFile("meetings.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x8e, 0xd3, 0x3c,
	0x10, 0xdd, 0x6c, 0xb7, 0x7f, 0xd3, 0xaf, 0xbb, 0x1f, 0xa6, 0xaa, 0x42, 0x2a, 0xa4, 0x2a, 0x2b,
	0xaa, 0x5e, 0xa0, 0xac, 0xd4, 0x15, 0x57, 0xdc, 0x20, 0xf1, 0x77, 0xc3, 0x22, 0xc8, 0x96, 0x1b,
	0x6e, 0xa2, 0xb4, 0x99, 0xad, 0xac, 0xa6, 0x76, 0x88, 0x5d, 0x04, 0x7d, 0x02, 0x5e, 0x8b, 0x07,
	0xe1, 0x5d, 0x90, 0xed, 0x78, 0x69, 0x9b, 0xb4, 0x70, 0x17, 0xcf, 0x1c, 0x9f, 0x99, 0x33, 0x67,
	0x1c, 0x38, 0x5f, 0x21, 0x4a, 0xca, 0x16, 0x22, 0xc8, 0x72, 0x2e, 0x39, 0xf9, 0x7f, 0xc6, 0xf9,
	0x92, 0xb2, 0x45, 0x34, 0x8f, 0x53, 0x64, 0x49, 0x9c, 0x7b, 0x83, 0x05, 0xe7, 0x8b, 0x14, 0xaf,
	0x74, 0x7e, 0xb6, 0xbe, 0xbb, 0xc2, 0x55, 0x26, 0xbf, 0x1b, 0xb8, 0x37, 0xdc, 0x4f, 0xde, 0x51,
	0x4c, 0x93, 0x68, 0x15, 0x8b, 0xa5, 0x41, 0xf8, 0x2f, 0xe0, 0x6c, 0x4a, 0x57, 0x48, 0x06, 0xd0,
	0x4e, 0x62, 0x89, 0x91, 0xa4, 0x2b, 0x74, 0x9d, 0xa1, 0x33, 0x6e, 0x87, 0x2d, 0x15, 0xb0, 0x49,
	0x15, 0x8f, 0x36, 0x9c, 0xa1, 0x7b, 0x6a, 0x92, 0x2a, 0xf0, 0x99, 0x33, 0xf4, 0x7f, 0x39, 0xd0,
	0xbc, 0x31, 0x5d, 0x92, 0x3e, 0x34, 0xb2, 0x38, 0x47, 0x26, 0x0b, 0x8a, 0xe2, 0x44, 0xce, 0xe1,
	0x94, 0x26, 0xc5, 0xcd, 0x53, 0x9a, 0x90, 0xa7, 0x50, 0x17, 0x32, 0xce, 0xa5, 0x5b, 0x1b, 0x3a,
	0xe3, 0xce, 0xa4, 0x1f, 0xec, 0xcb, 0x0a, 0x54, 0xdd, 0xd0, 0x80, 0xc8, 0x18, 0x6a, 0xc8, 0x12,
	0xf7, 0xec, 0x28, 0x56, 0x41, 0x48, 0x0f, 0xea, 0x92, 0xca, 0x14, 0xdd, 0xba, 0x2e, 0x65, 0x0e,
	0x64, 0x08, 0x9d, 0x04, 0xc5, 0x3c, 0xa7, 0x99, 0xa4, 0x9c, 0xb9, 0x0d, 0x9d, 0xdb, 0x0e, 0x11,
	0x0f, 0x5a, 0x29, 0x9f, 0xc7, 0x3a, 0xdd, 0x34, 0xfa, 0xec, 0xd9, 0xbf, 0x84, 0x07, 0x6f, 0x51,
	0x16, 0x0a, 0x43, 0xfc, 0xb2, 0x46, 0x61, 0x05, 0x39, 0x56, 0x90, 0x4f, 0xe1, 0xe1, 0x3b, 0x2a,
	0x2c, 0x4a, 0x58, 0xd8, 0xa1, 0x79, 0x0c, 0xa0, 0x9d, 0xc5, 0x0b, 0x8c, 0x04, 0xdd, 0x98, 0x81,
	0xd6, 0xc3, 0x96, 0x0a, 0xdc, 0xd2, 0x0d, 0x92, 0xc7, 0x00, 0x3a, 0x29, 0xf9, 0x12, 0x99, 0x9e,
	0x50, 0x3b, 0xd4, 0xf0, 0xa9, 0x0a, 0xf8, 0x6b, 0xe8, 0xed, 0x96, 0x12, 0x19, 0x67, 0x02, 0xc9,
	0x33, 0x68, 0xd9, 0x65, 0x71, 0x9d, 0x61, 0x6d, 0xdc, 0x99, 0x3c, 0x2a, 0x8f, 0xca, 0xca, 0xb8,
	0x87, 0x92, 0x11, 0x5c, 0x30, 0xfc, 0x26, 0xa3, 0xad, 0x92, 0xc6, 0xa7, 0xae, 0x0a, 0x7f, 0xb8,
	0x2f, 0x3b, 0x87, 0xde, 0xcb, 0x1c, 0x63, 0x89, 0x7b, 0x93, 0x38, 0x24, 0xf1, 0x1a, 0x9a, 0x45,
	0x0d, 0xcd, 0x77, 0xb4, 0x1b, 0x8b, 0xf4, 0x7f, 0x38, 0xd0, 0xfb, 0x94, 0x25, 0xe5, 0x2a, 0x5b,
	0x6c, 0xce, 0xbf, 0xb2, 0x91, 0xe7, 0xd0, 0x59, 0x6b, 0x32, 0xbd, 0xf0, 0x45, 0x1b, 0x5e, 0x60,
	0xde, 0x44, 0x60, 0xdf, 0x44, 0xf0, 0x46, 0xbd, 0x89, 0x9b, 0x58, 0x2c, 0x43, 0x30, 0x70, 0xf5,
	0xed, 0x8f, 0xa0, 0xf7, 0x0a, 0x53, 0x2c, 0x75, 0xb2, 0xe7, 0xfc, 0xe4, 0x67, 0x0d, 0x2e, 0xac,
	0x17, 0xb7, 0x98, 0x7f, 0xa5, 0x73, 0x24, 0xef, 0x01, 0xfe, 0xac, 0x0c, 0xb9, 0x2c, 0xb7, 0x5a,
	0x5a, 0x28, 0xef, 0xb0, 0x1e, 0xff, 0x84, 0x44, 0xf0, 0xdf, 0xb6, 0xe5, 0xe4, 0x49, 0x19, 0x5c,
	0xb1, 0x7d, 0xde, 0xe8, 0x6f, 0x30, 0xb3, 0x39, 0xfe, 0x09, 0x99, 0x42, 0x77, 0xc7, 0x5c, 0x52,
	0x71, 0xb5, 0xca, 0xfd, 0xe3, 0x6d, 0x4f, 0xa1, 0xbb, 0x63, 0x66, 0x15, 0x6b, 0x95, 0xdb, 0xc7,
	0x59, 0x3f, 0x42, 0x77, 0xc7, 0x98, 0x2a, 0xd6, 0x2a, 0xe7, 0xbc, 0x7e, 0xc9, 0xf9, 0xd7, 0xea,
	0x57, 0xe9, 0x9f, 0xcc, 0x1a, 0x3a, 0x72, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x80, 0x7a, 0xb6,
	0x21, 0x6e, 0x05, 0x00, 0x00,
}
